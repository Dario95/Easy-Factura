/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;

import conexionBDD.Conexionn;
import java.awt.Component;
import java.awt.event.MouseMotionListener;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableModel;

/**
 *
 * @author vengatus
 */
public class HistorialGastos extends javax.swing.JInternalFrame {

    Conexionn conn;
    String cedula_usuario;
    int anio;
    JTable auxP, auxN;

    public HistorialGastos(Conexionn conn, String cedula_usuario, int anio) {
        initComponents();
        lbl_Reporte.setText("REPORTE DEL AÑO " + anio);
        this.conn = conn;
        this.cedula_usuario = cedula_usuario;
        this.anio = anio;
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        Component north = ui.getNorthPane();
        MouseMotionListener[] actions
                = (MouseMotionListener[]) north.getListeners(MouseMotionListener.class);
        for (MouseMotionListener action : actions) {
            north.removeMouseMotionListener(action);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_Reporte = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        btnExport = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        lblPersonal = new javax.swing.JLabel();
        txtPersonal = new javax.swing.JTextField();
        lblNegocios = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setEnabled(false);
        setPreferredSize(new java.awt.Dimension(800, 700));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        lbl_Reporte.setFont(new java.awt.Font("Open Sans", 1, 48)); // NOI18N
        lbl_Reporte.setText("REPORTE DEL AÑO ");

        btnExport.setText("Exportar");
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });

        lblPersonal.setText("Gastos Personales Totales");

        txtPersonal.setEditable(false);

        lblNegocios.setText("Gastos de Negocios Totales");

        jTextField2.setEditable(false);

        jLabel1.setText("Gastos Personales");

        jLabel2.setText("Gastos de Negocios");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnExport)
                .addGap(145, 145, 145))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(lbl_Reporte))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblNegocios)
                                        .addGap(18, 18, 18))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lblPersonal)
                                        .addGap(25, 25, 25)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPersonal, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(120, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(lbl_Reporte)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPersonal)
                    .addComponent(txtPersonal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNegocios)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(btnExport)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        ArrayList historial_n = conn.ddl(String.format("select *,total_mercaderia+total_arriendo+total_servicios+total_sueldos+total_movilizacion+total_viaticos+total_capacitacion+total_suministros+total_herramientas from historial_pagos_negocios where anio_historial_n=%s and id_cliente='%s'", anio, cedula_usuario));
        ArrayList historial_p = conn.ddl(String.format("select *,total_alimentacion+total_salud+total_vivienda+total_educacion+total_vestimenta+total_otros from historial_pagos_personales where anio_historial_p=%s and id_cliente='%s'", this.anio, this.cedula_usuario));

        if (!historial_p.isEmpty()) {
            ArrayList anual = conn.ddl(String.format("select * from gastosanualespersonales where anio_gastos=%s", this.anio));
            ArrayList diferencia = conn.ddl(String.format("select g.total_alimentacion - h.total_alimentacion, g.total_salud - h.total_salud, g.total_vivienda - h.total_vivienda, g.total_educacion - h.total_educacion, g.total_vestimenta - h.total_vestimenta from gastosanualespersonales g join historial_pagos_personales h on g.anio_gastos = h.anio_historial_p where h.id_cliente='%s' and anio_gastos='%s'", this.cedula_usuario, this.anio));

            String nombreCabeceras[] = {"Tipo de Gasto", "Valor Acumulado", "Limite Anual", "Diferencia"};
            String datosTabla[][] = {{"Alimentacion", historial_p.get(2).toString(), anual.get(1).toString(), diferencia.get(0).toString()},
            {"Salud", historial_p.get(3).toString(), anual.get(2).toString(), diferencia.get(1).toString()},
            {"Vivienda", historial_p.get(4).toString(), anual.get(3).toString(), diferencia.get(2).toString()},
            {"Educacion", historial_p.get(5).toString(), anual.get(4).toString(), diferencia.get(3).toString()},
            {"Vestimenta", historial_p.get(6).toString(), anual.get(5).toString(), diferencia.get(4).toString()},
            {"Otros", historial_p.get(7).toString(), "", ""}};

            txtPersonal.setText((String) historial_p.get(8));

            JTable tablaHistorialP = new JTable(datosTabla, nombreCabeceras) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };

            auxP = tablaHistorialP;

            DefaultTableCellRenderer alinearDerecha = new DefaultTableCellRenderer();
            alinearDerecha.setHorizontalAlignment(DefaultTableCellRenderer.RIGHT);
            tablaHistorialP.getColumnModel().getColumn(1).setCellRenderer(alinearDerecha);
            tablaHistorialP.getColumnModel().getColumn(2).setCellRenderer(alinearDerecha);
            tablaHistorialP.getColumnModel().getColumn(3).setCellRenderer(alinearDerecha);

            jScrollPane1.setViewportView(tablaHistorialP);
        }

        if (!historial_n.isEmpty()) {

            String nombreCabeceras[] = {"Tipo de Gasto", "Valor Acumulado"};
            String datosTabla[][] = {{"Mercaderia", historial_n.get(2).toString()},
            {"Arriendo", historial_n.get(3).toString()},
            {"Servicios Basicos", historial_n.get(4).toString()},
            {"Sueldos", historial_n.get(5).toString()},
            {"Movilizacion", historial_n.get(6).toString()},
            {"Viaticos", historial_n.get(7).toString()},
            {"Capacitacion", historial_n.get(8).toString()},
            {"Suministros", historial_n.get(9).toString()},
            {"Herramientas", historial_n.get(10).toString()}};

            jTextField2.setText((String) historial_n.get(11));

            JTable tablaHistorialN = new JTable(datosTabla, nombreCabeceras) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };

            auxN = tablaHistorialN;

            DefaultTableCellRenderer alinearDerecha = new DefaultTableCellRenderer();
            alinearDerecha.setHorizontalAlignment(DefaultTableCellRenderer.RIGHT);
            tablaHistorialN.getColumnModel().getColumn(1).setCellRenderer(alinearDerecha);

            jScrollPane2.setViewportView(tablaHistorialN);
        }
    }//GEN-LAST:event_formComponentShown

    public void toExcel(JTable table, File file) {
        try {
            TableModel model = table.getModel();
            FileWriter excel = new FileWriter(file);

            for (int i = 0; i < model.getColumnCount(); i++) {
                excel.write(model.getColumnName(i) + "\t");
            }

            excel.write("\n");

            for (int i = 0; i < model.getRowCount(); i++) {
                for (int j = 0; j < model.getColumnCount(); j++) {
                    excel.write(model.getValueAt(i, j).toString() + "\t");
                }
                excel.write("\n");
            }

            excel.close();

        } catch (IOException e) {
            System.out.println(e);
        }
    }

    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed
        // TODO add your handling code here:
        String file = JOptionPane.showInputDialog(null, "Ingrese el Nombre del archivo");
        String path = "";
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        path = f.getAbsolutePath();
        if (auxP != null) {
            toExcel(auxP, new File(path + "/" + file + "-Personal.xls"));
        }
        if (auxN != null) {
            toExcel(auxN, new File(path + "/" + file + "-Negocios.xls"));
        }
        JOptionPane.showMessageDialog(null, "Reportes exportados exitosamente");
    }//GEN-LAST:event_btnExportActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HistorialGastos.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HistorialGastos.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HistorialGastos.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HistorialGastos.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExport;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JLabel lblNegocios;
    private javax.swing.JLabel lblPersonal;
    private javax.swing.JLabel lbl_Reporte;
    private javax.swing.JTextField txtPersonal;
    // End of variables declaration//GEN-END:variables
}
